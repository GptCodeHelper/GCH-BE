plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.0-SNAPSHOT'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.gch'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '21'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'

	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// Querydsl 추가
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

<<<<<<< HEAD
	//logback
	implementation 'ch.qos.logback:logback-classic:1.4.1'
=======
	// Spring Boot의 기본 로깅 제외
	configurations {
		all*.exclude module: 'spring-boot-starter-logging'
	}

	// Log4j2 의존성 추가
	implementation 'org.springframework.boot:spring-boot-starter-log4j2'
>>>>>>> dev
}

tasks.named('test') {
	useJUnitPlatform()
}

// QueryDSL Q클래스 생성 위치 지정
def querydslDir = "src/main/generated/querydsl"

// QueryDSL Q클래스 생성 위치를 지정
sourceSets {
	main.java.srcDir querydslDir
}

// QueryDSL Q클래스 생성 설정
tasks.withType(JavaCompile) {
	options.getGeneratedSourceOutputDirectory().set(file(querydslDir))
}

// clean 시에 생성된 Q클래스 삭제
clean {
	delete file(querydslDir)
}